{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookies from \"js-cookie\";\nimport Request from \"@/utils/request\";\nimport * as echarts from 'echarts';\nconst option = {\n  title: {\n    text: 'Line Chart of Borrows and Returns'\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  legend: {\n    data: ['Borrow', 'Return']\n  },\n  grid: {\n    left: '3%',\n    right: '4%',\n    bottom: '3%',\n    containLabel: true\n  },\n  toolbox: {\n    feature: {\n      saveAsImage: {}\n    }\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: false,\n    data: [] // get date form backend\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [{\n    name: 'Borrow',\n    type: 'line',\n    data: [] // get number of borrow records of a day form backend\n  }, {\n    name: 'Return',\n    type: 'line',\n    data: [] // get number of record records of a day form backend\n  }]\n};\nexport default {\n  data() {\n    return {\n      admin: Cookies.get('admin') ? JSON.parse(Cookies.get('admin')) : {},\n      form: {\n        dateRange: 'week'\n      },\n      lineBox: null,\n      // echarts container\n      range: [{\n        value: 'week',\n        label: 'Recent week'\n      }, {\n        value: 'month',\n        label: 'Recent 30 days'\n      }, {\n        value: 'month2',\n        label: 'Recent 60 days'\n      }, {\n        value: 'month3',\n        label: 'Recent 90 days'\n      }]\n    };\n  },\n  created() {\n    Request.get('/admin/' + this.admin.email).then(res => {\n      if (res.data !== null) {\n        this.admin = res.data;\n      } else {\n        this.$router.push('/login'); // jump to /login if res.data == null\n      }\n    });\n  },\n  mounted() {\n    this.load();\n  },\n  methods: {\n    load() {\n      if (!this.lineBox) {\n        this.lineBox = echarts.init(document.getElementById('lineChart')); // init lineBox\n      }\n      Request.get('/lineChart/getLineChart/' + this.form.dateRange).then(res => {\n        option.xAxis.data = res.data.date; // get date range\n        option.series[0].data = res.data.borrows; // get borrow data\n        option.series[1].data = res.data.reterns; // get return data\n        this.lineBox.setOption(option); // generate line chart\n      });\n    }\n  }\n};","map":{"version":3,"names":["Cookies","Request","echarts","option","title","text","tooltip","trigger","legend","data","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","yAxis","series","name","admin","get","JSON","parse","form","dateRange","lineBox","range","value","label","created","email","then","res","$router","push","mounted","load","methods","init","document","getElementById","date","borrows","reterns","setOption"],"sources":["src/views/home/HomeView.vue"],"sourcesContent":["<template>\n  <div style=\"padding: 10px;\">\n    <!-- date range selector -->\n    <div>\n      <el-select v-model=\"form.dateRange\" placeholder=\"Select date range\" @change=\"load\">\n        <el-option\n            v-for=\"item in range\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\">\n        </el-option>\n      </el-select>\n    </div>\n    <!-- line chart area -->\n    <div style=\"margin-top: 10px\">\n      <el-card>\n        <div id=\"lineChart\" style=\"width: 100%; height: 700px\"></div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Cookies from \"js-cookie\";\nimport Request from \"@/utils/request\";\nimport * as echarts from 'echarts';\n\nconst option = {\n  title: {\n    text: 'Line Chart of Borrows and Returns'\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  legend: {\n    data: ['Borrow', 'Return']\n  },\n  grid: {\n    left: '3%',\n    right: '4%',\n    bottom: '3%',\n    containLabel: true\n  },\n  toolbox: {\n    feature: {\n      saveAsImage: {}\n    }\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: false,\n    data: [] // get date form backend\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      name: 'Borrow',\n      type: 'line',\n      data: [] // get number of borrow records of a day form backend\n    },\n    {\n      name: 'Return',\n      type: 'line',\n      data: [] // get number of record records of a day form backend\n    },\n  ]\n};\n\nexport default {\n  data() {\n    return {\n      admin: Cookies.get('admin') ? JSON.parse(Cookies.get('admin')): {},\n      form: { dateRange: 'week' },\n      lineBox: null, // echarts container\n      range: [{\n        value: 'week',\n        label: 'Recent week'\n      }, {\n        value: 'month',\n        label: 'Recent 30 days'\n      }, {\n        value: 'month2',\n        label: 'Recent 60 days'\n      }, {\n        value: 'month3',\n        label: 'Recent 90 days'\n      }],\n    }\n  },\n\n  created() {\n    Request.get('/admin/' + this.admin.email).then(res => {\n      if(res.data !== null) {\n        this.admin = res.data\n      } else {\n        this.$router.push('/login') // jump to /login if res.data == null\n      }\n    })\n  },\n\n  mounted() {\n    this.load()\n  },\n\n  methods: {\n    load() {\n      if(!this.lineBox) {\n        this.lineBox = echarts.init(document.getElementById('lineChart')) // init lineBox\n      }\n      Request.get('/lineChart/getLineChart/' + this.form.dateRange).then(res => {\n        option.xAxis.data = res.data.date // get date range\n        option.series[0].data = res.data.borrows // get borrow data\n        option.series[1].data = res.data.reterns // get return data\n        this.lineBox.setOption(option) // generate line chart\n      })\n    },\n\n\n  }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";AAuBA,OAAAA,OAAA;AACA,OAAAC,OAAA;AACA,YAAAC,OAAA;AAEA,MAAAC,MAAA;EACAC,KAAA;IACAC,IAAA;EACA;EACAC,OAAA;IACAC,OAAA;EACA;EACAC,MAAA;IACAC,IAAA;EACA;EACAC,IAAA;IACAC,IAAA;IACAC,KAAA;IACAC,MAAA;IACAC,YAAA;EACA;EACAC,OAAA;IACAC,OAAA;MACAC,WAAA;IACA;EACA;EACAC,KAAA;IACAC,IAAA;IACAC,WAAA;IACAX,IAAA;EACA;EACAY,KAAA;IACAF,IAAA;EACA;EACAG,MAAA,GACA;IACAC,IAAA;IACAJ,IAAA;IACAV,IAAA;EACA,GACA;IACAc,IAAA;IACAJ,IAAA;IACAV,IAAA;EACA;AAEA;AAEA;EACAA,KAAA;IACA;MACAe,KAAA,EAAAxB,OAAA,CAAAyB,GAAA,YAAAC,IAAA,CAAAC,KAAA,CAAA3B,OAAA,CAAAyB,GAAA;MACAG,IAAA;QAAAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,KAAA;QACAC,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;IACA;EACA;EAEAC,QAAA;IACAjC,OAAA,CAAAwB,GAAA,kBAAAD,KAAA,CAAAW,KAAA,EAAAC,IAAA,CAAAC,GAAA;MACA,IAAAA,GAAA,CAAA5B,IAAA;QACA,KAAAe,KAAA,GAAAa,GAAA,CAAA5B,IAAA;MACA;QACA,KAAA6B,OAAA,CAAAC,IAAA;MACA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,IAAA;EACA;EAEAC,OAAA;IACAD,KAAA;MACA,UAAAX,OAAA;QACA,KAAAA,OAAA,GAAA5B,OAAA,CAAAyC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA;MACA5C,OAAA,CAAAwB,GAAA,mCAAAG,IAAA,CAAAC,SAAA,EAAAO,IAAA,CAAAC,GAAA;QACAlC,MAAA,CAAAe,KAAA,CAAAT,IAAA,GAAA4B,GAAA,CAAA5B,IAAA,CAAAqC,IAAA;QACA3C,MAAA,CAAAmB,MAAA,IAAAb,IAAA,GAAA4B,GAAA,CAAA5B,IAAA,CAAAsC,OAAA;QACA5C,MAAA,CAAAmB,MAAA,IAAAb,IAAA,GAAA4B,GAAA,CAAA5B,IAAA,CAAAuC,OAAA;QACA,KAAAlB,OAAA,CAAAmB,SAAA,CAAA9C,MAAA;MACA;IACA;EAGA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}