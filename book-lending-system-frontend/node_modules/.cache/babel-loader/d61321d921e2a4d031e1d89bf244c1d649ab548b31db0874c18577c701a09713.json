{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"UserBorrowList\",\n  data() {\n    return {\n      tableData: [],\n      total: 0,\n      params: {\n        pageNum: 1,\n        pageSize: 10,\n        name: '',\n        isbn: ''\n      }\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      // Simulating user-specific data loading\n      // You should replace this with your actual API request\n      this.tableData = [{\n        name: \"Book 1\",\n        isbn: \"1234567890\",\n        borrow_date: \"2024-03-17\",\n        returned: false\n      }, {\n        name: \"Book 2\",\n        isbn: \"0987654321\",\n        borrow_date: \"2024-03-16\",\n        returned: true\n      }, {\n        name: \"Book 3\",\n        isbn: \"9876543210\",\n        borrow_date: \"2024-03-15\",\n        returned: false\n      }];\n    },\n    reset() {\n      this.params.name = '';\n      this.load();\n    },\n    returnBook(row) {\n      // Simulating return book action\n      // You should replace this with your actual API request\n      row.returned = true;\n      // Call API to update return date and book status\n      request.post(`/books/${row.isbn}/return`).then(() => {\n        this.$message.success('Book returned successfully.');\n      }).catch(error => {\n        this.$message.error(`Failed to return book: ${error.message}`);\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","tableData","total","params","pageNum","pageSize","isbn","created","load","methods","borrow_date","returned","reset","returnBook","row","post","then","$message","success","catch","error","message"],"sources":["src/views/borrow/List.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- table area -->\r\n    <el-table :data=\"tableData\" style=\"width: 100%\" stripe>\r\n      <el-table-column prop=\"name\" label=\"書名\" show-overflow-tooltip width=\"300\"></el-table-column>\r\n      <el-table-column prop=\"isbn\" label=\"ISBN\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"borrow_date\" label=\"借閱時間\" width=\"200\"></el-table-column>\r\n      <el-table-column prop=\"return_date\" label=\"歸還時間\" width=\"200\"></el-table-column>\r\n      <el-table-column label=\"Operation\">\r\n        <template v-slot=\"scope\">\r\n          <el-button v-if=\"scope.row.returned\" disabled>Returned</el-button>\r\n          <el-button v-else @click=\"returnBook(scope.row)\">Return</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!-- page -->\r\n    <el-pagination\r\n        style=\"margin-top: 20px;\"\r\n        background\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        @current-change=\"changePageNum\"\r\n        layout=\"prev, pager, next\"\r\n        :total=\"total\">\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"UserBorrowList\",\r\n\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      total: 0,\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        name: '',\r\n        isbn: '',\r\n      },\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.load();\r\n  },\r\n\r\n  methods: {\r\n    load() {\r\n      // Simulating user-specific data loading\r\n      // You should replace this with your actual API request\r\n      this.tableData = [\r\n        { name: \"Book 1\", isbn: \"1234567890\", borrow_date: \"2024-03-17\", returned: false },\r\n        { name: \"Book 2\", isbn: \"0987654321\", borrow_date: \"2024-03-16\", returned: true },\r\n        { name: \"Book 3\", isbn: \"9876543210\", borrow_date: \"2024-03-15\", returned: false }\r\n      ];\r\n    },\r\n\r\n    reset() {\r\n      this.params.name = '';\r\n      this.load();\r\n    },\r\n\r\n    returnBook(row) {\r\n      // Simulating return book action\r\n      // You should replace this with your actual API request\r\n      row.returned = true;\r\n      // Call API to update return date and book status\r\n      request.post(`/books/${row.isbn}/return`)\r\n        .then(() => {\r\n          this.$message.success('Book returned successfully.');\r\n        })\r\n        .catch(error => {\r\n          this.$message.error(`Failed to return book: ${error.message}`);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AA6BA,OAAAA,OAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA;MACAC,SAAA;MACAC,KAAA;MACAC,MAAA;QACAC,OAAA;QACAC,QAAA;QACAN,IAAA;QACAO,IAAA;MACA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,IAAA;EACA;EAEAC,OAAA;IACAD,KAAA;MACA;MACA;MACA,KAAAP,SAAA,IACA;QAAAF,IAAA;QAAAO,IAAA;QAAAI,WAAA;QAAAC,QAAA;MAAA,GACA;QAAAZ,IAAA;QAAAO,IAAA;QAAAI,WAAA;QAAAC,QAAA;MAAA,GACA;QAAAZ,IAAA;QAAAO,IAAA;QAAAI,WAAA;QAAAC,QAAA;MAAA,EACA;IACA;IAEAC,MAAA;MACA,KAAAT,MAAA,CAAAJ,IAAA;MACA,KAAAS,IAAA;IACA;IAEAK,WAAAC,GAAA;MACA;MACA;MACAA,GAAA,CAAAH,QAAA;MACA;MACAb,OAAA,CAAAiB,IAAA,WAAAD,GAAA,CAAAR,IAAA,WACAU,IAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACA,KAAAH,QAAA,CAAAG,KAAA,2BAAAA,KAAA,CAAAC,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}