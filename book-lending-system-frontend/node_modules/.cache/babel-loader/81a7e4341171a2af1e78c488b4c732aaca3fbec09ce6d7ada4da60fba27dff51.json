{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"Add\",\n  data() {\n    const checkISBN = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('Please enter the book\\'s ISBN'));\n      }\n      if (!/^[0-9]{10}$/.test(value)) {\n        callback(new Error('Illegal ISBN'));\n      }\n      callback();\n    };\n    const checkEmail = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('Please enter the email address'));\n      }\n      if (!/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/.test(value)) {\n        callback(new Error('Illegal email address'));\n      }\n      callback();\n    };\n    const checkPhone = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('Please enter the phone number'));\n      }\n      if (!/^[1,2,3,4,5,6,7,8,9][0-9]{9}$/.test(value)) {\n        callback(new Error('Illegal phone number'));\n      }\n      callback();\n    };\n    return {\n      form: {\n        duration: 1\n      },\n      books: [],\n      users: [],\n      unitCredit: 0,\n      // rules to check the input values\n      rules: {\n        username: [{\n          required: true,\n          message: 'Please enter the username',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: \"Please enter the book's name\",\n          trigger: 'blur'\n        }],\n        credit: [{\n          required: true,\n          message: \"Please enter the book's credit\",\n          trigger: 'blur'\n        }],\n        // more restrictions\n        email: [{\n          required: true,\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          validator: checkPhone,\n          trigger: 'blur'\n        }],\n        isbn: [{\n          required: true,\n          validator: checkISBN,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    // get book list\n    request.get('/book/list').then(res => {\n      this.books = res.data;\n    });\n    // get user list\n    request.get('/user/list').then(res => {\n      this.users = res.data.filter(v => v.status);\n    });\n  },\n  methods: {\n    save() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          request.post('borrow/save', this.form).then(res => {\n            if (res.code === '200') {\n              this.$notify.success('Submitted');\n              this.$refs['ruleForm'].resetFields();\n              location.reload();\n            } else {\n              this.$notify.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    // get data from book\n    selectBook() {\n      // console.log(this.form.isbn)\n      const book = this.books.find(v => v.isbn === this.form.isbn);\n      request.get(\"/book/\" + book.isbn).then(res => {\n        this.form.name = res.data.name;\n        this.form.credit = res.data.credit;\n        this.form.number = res.data.number;\n        this.unitCredit = res.data.credit;\n        this.$forceUpdate();\n      });\n    },\n    // get data from user\n    selectUser() {\n      const user = this.users.find(v => v.email === this.form.email);\n      request.get(\"/user/\" + user.email).then(res => {\n        this.form.phone = res.data.phone;\n        this.form.username = res.data.username;\n        this.form.acredit = res.data.acredit;\n        this.$forceUpdate();\n      });\n    },\n    handleChange() {\n      this.form.credit = this.form.duration * this.unitCredit;\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","checkISBN","rule","value","callback","Error","test","checkEmail","checkPhone","form","duration","books","users","unitCredit","rules","username","required","message","trigger","credit","email","validator","phone","isbn","created","get","then","res","filter","v","status","methods","save","$refs","validate","valid","post","code","$notify","success","resetFields","location","reload","error","msg","selectBook","book","find","number","$forceUpdate","selectUser","user","acredit","handleChange"],"sources":["src/views/borrow/Add.vue"],"sourcesContent":["<template>\r\n  <div style=\"padding: 10px;\">\r\n    <div style=\"font-size: 40px; font-family: Arial; margin-bottom: 5px\">Add New Borrow Record</div>\r\n    <div style=\" width: 80%\">\r\n      <!-- form area -->\r\n      <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\r\n        <el-form-item label=\"ISBN: \" style=\"margin-left: 2px\" prop=\"isbn\">\r\n          <el-select v-model=\"form.isbn\" clearable filterable placeholder=\"Please select ISBN\" @change=\"selectBook\">\r\n            <el-option\r\n                v-for=\"item in books\"\r\n                :key=\"item.isbn\"\r\n                :label=\"item.isbn\"\r\n                :value=\"item.isbn\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Book Name: \" style=\"margin-left: 2px\"  prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"Enter book's name\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item id=\"credit\" label=\"Need Credit: \" style=\"margin-left: 2px;\" prop=\"credit\">\r\n          <el-input v-model=\"form.credit\" placeholder=\"Enter credit\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item id=\"number\" label=\"Number: \" style=\"margin-left: 2px;\" prop=\"number\">\r\n          <el-input v-model=\"form.number\" placeholder=\"Enter a number\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"User ID: \" style=\"margin-left: 2px\" prop=\"uid\">\r\n          <el-select v-model=\"form.email\" clearable filterable placeholder=\"Please select an user ID\" @change=\"selectUser\">\r\n            <el-option\r\n                v-for=\"item in users\"\r\n                :key=\"item.email\"\r\n                :label=\"item.uid\"\r\n                :value=\"item.email\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Phone: \" style=\"margin-left: 2px\" prop=\"phone\">\r\n          <el-input v-model=\"form.phone\" placeholder=\"Enter phone number\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Username: \" style=\"margin-left: 2px\" prop=\"username\">\r\n          <el-input v-model=\"form.username\" placeholder=\"Enter username\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Score Left: \" style=\"margin-left: 2px\" prop=\"acredit\">\r\n          <el-input v-model=\"form.acredit\" placeholder=\"Enter score value\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Borrow Days: \" style=\"margin-left: 2px\" prop=\"duration\">\r\n          <template>\r\n            <el-input-number v-model=\"form.duration\" @change=\"handleChange\" :min=\"1\" :max=\"10\"></el-input-number>\r\n          </template>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- button area -->\r\n      <div style=\"text-align: center\">\r\n        <el-button type=\"primary\" style=\"margin-left: 2px; height: 40px; min-width: 100px\" @click=\"save\">Submit</el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"Add\",\r\n\r\n  data() {\r\n    const checkISBN = (rule, value, callback) => {\r\n      if(!value) {\r\n        callback(new Error('Please enter the book\\'s ISBN'))\r\n      }\r\n      if (!/^[0-9]{10}$/.test(value)) {\r\n        callback(new Error('Illegal ISBN'));\r\n      }\r\n      callback()\r\n    }\r\n\r\n    const checkEmail = (rule, value, callback) => {\r\n      if(!value) {\r\n        callback(new Error('Please enter the email address'))\r\n      }\r\n      if(!/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/.test(value)) {\r\n        callback(new Error('Illegal email address'))\r\n      }\r\n      callback()\r\n    };\r\n\r\n    const checkPhone = (rule, value, callback) => {\r\n      if(!value) {\r\n        callback(new Error('Please enter the phone number'))\r\n      }\r\n      if (!/^[1,2,3,4,5,6,7,8,9][0-9]{9}$/.test(value)) {\r\n        callback(new Error('Illegal phone number'));\r\n      }\r\n      callback()\r\n    }\r\n\r\n    return {\r\n      form: {\r\n        duration: 1,\r\n      },\r\n      books: [],\r\n      users: [],\r\n      unitCredit: 0,\r\n      // rules to check the input values\r\n      rules: {\r\n        username: [{ required: true, message: 'Please enter the username', trigger: 'blur' }],\r\n        name: [{ required: true, message: \"Please enter the book's name\", trigger: 'blur' }],\r\n        credit: [{ required: true, message: \"Please enter the book's credit\", trigger: 'blur' }],\r\n        // more restrictions\r\n        email:[{ required: true, validator: checkEmail, trigger: 'blur' }],\r\n        phone:[{ required: true, validator: checkPhone, trigger: 'blur' }],\r\n        isbn: [{ required: true,  validator: checkISBN, trigger: 'blur' }],\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    // get book list\r\n    request.get('/book/list').then(res => {\r\n      this.books = res.data\r\n    })\r\n    // get user list\r\n    request.get('/user/list').then(res => {\r\n      this.users = res.data.filter(v => v.status)\r\n    })\r\n  },\r\n\r\n  methods: {\r\n    save() {\r\n      this.$refs['ruleForm'].validate((valid) => {\r\n        if(valid) {\r\n          request.post('borrow/save', this.form).then(res => {\r\n            if(res.code === '200') {\r\n              this.$notify.success('Submitted')\r\n              this.$refs['ruleForm'].resetFields()\r\n              location.reload()\r\n            } else {\r\n              this.$notify.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // get data from book\r\n    selectBook() {\r\n      // console.log(this.form.isbn)\r\n      const book = this.books.find(v => v.isbn === this.form.isbn)\r\n      request.get(\"/book/\" + book.isbn).then( res => {\r\n        this.form.name = res.data.name\r\n        this.form.credit = res.data.credit\r\n        this.form.number = res.data.number\r\n        this.unitCredit = res.data.credit\r\n        this.$forceUpdate()\r\n      })\r\n    },\r\n    // get data from user\r\n    selectUser() {\r\n      const user = this.users.find(v => v.email === this.form.email)\r\n      request.get(\"/user/\" + user.email).then(res => {\r\n        this.form.phone = res.data.phone\r\n        this.form.username = res.data.username\r\n        this.form.acredit = res.data.acredit\r\n        this.$forceUpdate()\r\n      })\r\n    },\r\n\r\n    handleChange() {\r\n      this.form.credit = this.form.duration * this.unitCredit\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}