{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"List\",\n  data() {\n    const checkNumeric = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('This blank cannot be empty'));\n      }\n      if (!/^[0-9]*$/.test(value)) {\n        callback(new Error('Please enter a numerical value'));\n      }\n      if (parseInt(value) < 0) {\n        callback(new Error('Please enter a number larger than 0'));\n      }\n      callback();\n    };\n    return {\n      tableData: [],\n      total: 0,\n      form: {},\n      dialogFormVisible: false,\n      formLabelWidth: '200px',\n      params: {\n        pageNum: 1,\n        pageSize: 10,\n        email: '',\n        uid: ''\n      },\n      rules: {\n        charge: [{\n          required: true,\n          validator: checkNumeric,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      //let url = this.encapsule()\n      // console.log(url)\n      // fetch(url).then(res => res.json()).then(res => {\n      //   // console.log(res.data)\n      //   if(res.code === '200') {\n      //     this.tableData = res.data.list\n      //     this.total = res.data.total\n      //   }\n      // })\n\n      request.get('user/page', {\n        params: this.params\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        }\n      });\n    },\n    del(email) {\n      request.delete('user/delete/' + email).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Deleted');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    //encapsule() {\n    //  let url = 'http://localhost:9090/user/page'\n    //  let params = this.params\n    //\n    //  url = url + '?pageNum=' + params.pageNum\n    //  url = url + '&pageSize=' + params.pageSize\n    //  url = url + '&email=' + params.email\n    //  url = url + '&uid=' + params.uid\n    //\n    //  // console.log(url)\n    //  return url\n    //},\n\n    reset() {\n      this.params = {\n        pageNum: 1,\n        pageSize: 10,\n        email: '',\n        uid: ''\n      };\n      this.value = '';\n      this.load();\n    },\n    changePageNum(pageNum) {\n      this.params.pageNum = pageNum;\n      this.load();\n    },\n    chargeOpen(row) {\n      this.dialogFormVisible = true;\n      this.form = row;\n    },\n    cancel() {\n      this.dialogFormVisible = false;\n      this.$refs['ruleForm'].resetFields();\n    },\n    chargeUser() {\n      request.post(\"/user/charge\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Success');\n          this.$refs['ruleForm'].resetFields();\n          this.dialogFormVisible = false;\n          location.reload(); // refresh page\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    changeStatus(row) {\n      // console.log(row)\n      request.put('user/update', row).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Status updated');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","checkNumeric","rule","value","callback","Error","test","parseInt","tableData","total","form","dialogFormVisible","formLabelWidth","params","pageNum","pageSize","email","uid","rules","charge","required","validator","trigger","created","load","methods","get","then","res","code","list","del","delete","$notify","success","error","msg","reset","changePageNum","chargeOpen","row","cancel","$refs","resetFields","chargeUser","post","location","reload","changeStatus","put"],"sources":["src/views/user/List.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- search area -->\r\n    <div style=\"margin-bottom: 2px; margin-top: 2px\">\r\n      <el-input v-model=\"params.email\" placeholder=\"Enter user email\" style=\"width: 200px; margin-left: 2px\"></el-input>\r\n      <el-input v-model=\"params.uid\" placeholder=\"Enter user id\" style=\"width: 200px; margin-left: 2px\"></el-input>\r\n      <el-button type=\"primary\" style=\"margin-left: 2px; height: 40px\" icon=\"el-icon-search\" @click=\"load\">Search</el-button>\r\n      <el-button type=\"warning\" style=\"margin-left: 2px; height: 40px\" icon=\"el-icon-refresh-right\" @click=\"reset\">Reset</el-button>\r\n    </div>\r\n    <!-- table area -->\r\n    <div>\r\n      <el-table :data=\"tableData\" style=\"width: 100%\" stripe>\r\n        <el-table-column prop=\"status\" label=\"Status\" width=\"80\">\r\n          <template v-slot=\"scope2\">\r\n            <el-switch\r\n                v-model=\"scope2.row.status\"\r\n                active-color=\"#13ce66\"\r\n                inactive-color=\"#ff4949\"\r\n                @change=\"changeStatus(scope2.row)\">\r\n            </el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"uid\" label=\"User ID\" show-overflow-tooltip width=\"130\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"Username\" show-overflow-tooltip width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"fname\" label=\"First Name\" width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"lname\" label=\"Last Name\" width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"age\" label=\"Age\" width=\"50\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"Email\" show-overflow-tooltip width=\"150\"></el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"Phone\" width=\"110\"></el-table-column>\r\n        <el-table-column prop=\"province\" label=\"Province/State\" width=\"95\"></el-table-column>\r\n        <el-table-column prop=\"city\" label=\"City\" show-overflow-tooltip width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"street\" label=\"Street\" show-overflow-tooltip width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"ctime\" label=\"Create Date\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"utime\" label=\"Update Date\" width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"acredit\" label=\"Score\" width=\"70\"></el-table-column>\r\n        <el-table-column fixed=\"right\" label=\"Operations\" width=\"265\">\r\n          <template v-slot=\"scope\">\r\n            <el-button type=\"success\" @click=\"chargeOpen(scope.row)\">Reharge</el-button>\r\n            <el-button type=\"primary\" style=\"margin-left: 2px;\" @click=\"$router.push('/editUser?email=' + scope.row.email)\">Edit</el-button>\r\n            <el-popconfirm\r\n                confirm-button-text='Yes'\r\n                cancel-button-text='No'\r\n                title=\"Are you sure you want to delete this row of dataï¼Ÿ\"\r\n                @confirm=\"del(scope.row.email)\"\r\n            >\r\n              <el-button style=\"margin-left: 2px;\" slot=\"reference\" type=\"danger\">Delete</el-button>\r\n            </el-popconfirm>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- charge up user account -->\r\n      <el-dialog style=\"text-align: center\" :visible.sync=\"dialogFormVisible\">\r\n        <div style=\"font-size: 30px; font-family: Arial; font-weight: bold\">Charge Up User's Account</div>\r\n        <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" style=\"margin-top: 15px; width: 80vh;\">\r\n          <el-form-item label=\"User email: \" :label-width=\"formLabelWidth\" prop=\"name\">\r\n            <el-input v-model=\"form.email\" disabled autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Current credit: \" :label-width=\"formLabelWidth\" prop=\"name\">\r\n            <el-input v-model=\"form.acredit\" disabled autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Charge amount: \" :label-width=\"formLabelWidth\" prop=\"charge\">\r\n            <el-input v-model=\"form.charge\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <!-- buttons -->\r\n        <div slot=\"footer\" class=\"dialog-footer\" style=\"text-align: center; margin-top: -40px\">\r\n          <el-button type=\"primary\" @click=\"chargeUser\">Confirm</el-button>\r\n          <el-button type=\"warning\" @click=\"cancel\">Cancel</el-button>\r\n        </div>\r\n      </el-dialog>\r\n      <!-- page -->\r\n      <el-pagination\r\n          style=\"margin-top: 5px;\"\r\n          background\r\n          :current-page=\"params.pageNum\"\r\n          :page-size=\"params.pageSize\"\r\n          @current-change=\"changePageNum\"\r\n          layout=\"prev, pager, next\"\r\n          :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"List\",\r\n\r\n  data() {\r\n    const checkNumeric = (rule, value, callback) => {\r\n      if(!value) {\r\n        callback(new Error('This blank cannot be empty'));\r\n      }\r\n      if(!/^[0-9]*$/.test(value)) {\r\n        callback(new Error('Please enter a numerical value'))\r\n      }\r\n      if(parseInt(value) < 0) {\r\n        callback(new Error('Please enter a number larger than 0'))\r\n      }\r\n      callback()\r\n    }\r\n\r\n    return {\r\n      tableData: [],\r\n      total: 0,\r\n      form: {},\r\n      dialogFormVisible: false,\r\n      formLabelWidth: '200px',\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        email: '',\r\n        uid: '',\r\n      },\r\n      rules: {\r\n        charge: [{ required: true,  validator: checkNumeric, trigger: 'blur' }],\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.load()\r\n  },\r\n\r\n  methods: {\r\n    load() {\r\n      //let url = this.encapsule()\r\n      // console.log(url)\r\n      // fetch(url).then(res => res.json()).then(res => {\r\n      //   // console.log(res.data)\r\n      //   if(res.code === '200') {\r\n      //     this.tableData = res.data.list\r\n      //     this.total = res.data.total\r\n      //   }\r\n      // })\r\n\r\n      request.get('user/page', {\r\n        params: this.params\r\n      }).then(res => {\r\n        if(res.code === '200') {\r\n          this.tableData = res.data.list\r\n          this.total = res.data.total\r\n        }\r\n      })\r\n    },\r\n\r\n    del(email) {\r\n      request.delete('user/delete/' + email).then(res => {\r\n            if(res.code === '200') {\r\n              this.$notify.success('Deleted')\r\n              this.load()\r\n            } else {\r\n              this.$notify.error(res.msg)\r\n            }\r\n      })\r\n    },\r\n\r\n    //encapsule() {\r\n    //  let url = 'http://localhost:9090/user/page'\r\n    //  let params = this.params\r\n//\r\n    //  url = url + '?pageNum=' + params.pageNum\r\n    //  url = url + '&pageSize=' + params.pageSize\r\n    //  url = url + '&email=' + params.email\r\n    //  url = url + '&uid=' + params.uid\r\n//\r\n    //  // console.log(url)\r\n    //  return url\r\n    //},\r\n\r\n    reset() {\r\n      this.params = {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        email: '',\r\n        uid: '',\r\n      }\r\n      this.value = ''\r\n      this.load()\r\n    },\r\n\r\n    changePageNum(pageNum) {\r\n      this.params.pageNum = pageNum\r\n      this.load()\r\n    },\r\n\r\n    chargeOpen(row) {\r\n      this.dialogFormVisible = true\r\n      this.form = row\r\n    },\r\n\r\n    cancel() {\r\n      this.dialogFormVisible = false\r\n      this.$refs['ruleForm'].resetFields()\r\n    },\r\n\r\n    chargeUser() {\r\n      request.post(\"/user/charge\", this.form).then(res => {\r\n        if(res.code === '200') {\r\n          this.$notify.success('Success')\r\n          this.$refs['ruleForm'].resetFields()\r\n          this.dialogFormVisible = false\r\n          location.reload() // refresh page\r\n        } else {\r\n          this.$notify.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n\r\n    changeStatus(row) {\r\n      // console.log(row)\r\n      request.put('user/update', row).then(res => {\r\n        if(res.code === '200') {\r\n          this.$notify.success('Status updated')\r\n          this.load()\r\n        } else {\r\n          this.$notify.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAqFA,OAAAA,OAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA,MAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACA,gBAAAC,IAAA,CAAAH,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACA,IAAAE,QAAA,CAAAJ,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACAD,QAAA;IACA;IAEA;MACAI,SAAA;MACAC,KAAA;MACAC,IAAA;MACAC,iBAAA;MACAC,cAAA;MACAC,MAAA;QACAC,OAAA;QACAC,QAAA;QACAC,KAAA;QACAC,GAAA;MACA;MACAC,KAAA;QACAC,MAAA;UAAAC,QAAA;UAAAC,SAAA,EAAApB,YAAA;UAAAqB,OAAA;QAAA;MACA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,IAAA;EACA;EAEAC,OAAA;IACAD,KAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA1B,OAAA,CAAA4B,GAAA;QACAb,MAAA,OAAAA;MACA,GAAAc,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAArB,SAAA,GAAAoB,GAAA,CAAA5B,IAAA,CAAA8B,IAAA;UACA,KAAArB,KAAA,GAAAmB,GAAA,CAAA5B,IAAA,CAAAS,KAAA;QACA;MACA;IACA;IAEAsB,IAAAf,KAAA;MACAlB,OAAA,CAAAkC,MAAA,kBAAAhB,KAAA,EAAAW,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAI,OAAA,CAAAC,OAAA;UACA,KAAAV,IAAA;QACA;UACA,KAAAS,OAAA,CAAAE,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEAC,MAAA;MACA,KAAAxB,MAAA;QACAC,OAAA;QACAC,QAAA;QACAC,KAAA;QACAC,GAAA;MACA;MACA,KAAAd,KAAA;MACA,KAAAqB,IAAA;IACA;IAEAc,cAAAxB,OAAA;MACA,KAAAD,MAAA,CAAAC,OAAA,GAAAA,OAAA;MACA,KAAAU,IAAA;IACA;IAEAe,WAAAC,GAAA;MACA,KAAA7B,iBAAA;MACA,KAAAD,IAAA,GAAA8B,GAAA;IACA;IAEAC,OAAA;MACA,KAAA9B,iBAAA;MACA,KAAA+B,KAAA,aAAAC,WAAA;IACA;IAEAC,WAAA;MACA9C,OAAA,CAAA+C,IAAA,sBAAAnC,IAAA,EAAAiB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAI,OAAA,CAAAC,OAAA;UACA,KAAAQ,KAAA,aAAAC,WAAA;UACA,KAAAhC,iBAAA;UACAmC,QAAA,CAAAC,MAAA;QACA;UACA,KAAAd,OAAA,CAAAE,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;IAEAY,aAAAR,GAAA;MACA;MACA1C,OAAA,CAAAmD,GAAA,gBAAAT,GAAA,EAAAb,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAI,OAAA,CAAAC,OAAA;UACA,KAAAV,IAAA;QACA;UACA,KAAAS,OAAA,CAAAE,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}