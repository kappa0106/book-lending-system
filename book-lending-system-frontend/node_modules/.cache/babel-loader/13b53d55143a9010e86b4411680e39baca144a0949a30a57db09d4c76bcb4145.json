{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"Edit\",\n  data() {\n    const checkNumeric = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('This blank cannot be empty'));\n      }\n      if (!/^[0-9]*$/.test(value)) {\n        callback(new Error('Please enter a numerical value'));\n      }\n      if (parseInt(value) < 0) {\n        callback(new Error('Please enter a number larger than 0'));\n      }\n      callback();\n    };\n    const checkISBN = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('Please enter the book\\'s ISBN'));\n      }\n      if (!/^[0-9]{10}$/.test(value)) {\n        callback(new Error('Illegal ISBN'));\n      }\n      callback();\n    };\n    return {\n      form: {},\n      categories: [],\n      rules: {\n        // cannot be empty\n        name: [{\n          required: true,\n          message: \"Please enter the book's name\",\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: \"Please enter the book's category\",\n          trigger: 'blur'\n        }],\n        author: [{\n          required: true,\n          message: \"Please enter the book's author\",\n          trigger: 'blur'\n        }],\n        publisher: [{\n          required: true,\n          message: \"Please enter the book's publisher\",\n          trigger: 'blur'\n        }],\n        publish_date: [{\n          required: true,\n          message: \"Please select a date\",\n          trigger: 'blur'\n        }],\n        // more restrictions\n        isbn: [{\n          required: true,\n          validator: checkISBN,\n          trigger: 'blur'\n        }],\n        number: [{\n          required: true,\n          validator: checkNumeric,\n          trigger: 'blur'\n        }],\n        credit: [{\n          required: true,\n          validator: checkNumeric,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    const isbn = this.$route.query.isbn;\n    request.get(\"/book/\" + isbn).then(res => {\n      this.form = res.data;\n      if (this.form.category) {\n        this.form.categories = this.form.category.split(' > ');\n      }\n    });\n    request.get('category/tree').then(res => {\n      this.categories = res.data;\n    });\n  },\n  methods: {\n    save() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          request.put('book/update', this.form).then(res => {\n            if (res.code === '200') {\n              this.$notify.success('Updated');\n              this.$router.push(\"/BookList\");\n            } else {\n              this.$notify.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","checkNumeric","rule","value","callback","Error","test","parseInt","checkISBN","form","categories","rules","required","message","trigger","category","author","publisher","publish_date","isbn","validator","number","credit","created","$route","query","get","then","res","split","methods","save","$refs","validate","valid","put","code","$notify","success","$router","push","error","msg"],"sources":["src/views/book/Edit.vue"],"sourcesContent":["<template>\r\n  <div style=\"padding: 10px;\">\r\n    <div style=\"font-size: 40px; font-family: Arial; margin-bottom: 5px\">Edit Book</div>\r\n    <div style=\"width: 60%\">\r\n      <!-- form area -->\r\n      <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\r\n        <el-form-item label=\"ISBN: \" style=\"margin-left: 2px\" prop=\"isbn\">\r\n          <el-input v-model=\"form.isbn\" placeholder=\"Enter isbn\" :disabled=\"true\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Description: \" style=\"margin-left: 2px;\" prop=\"description\">\r\n          <el-input style=\"width: 500px\" type=\"textarea\" v-model=\"form.description\" placeholder=\"Enter description\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Name: \" style=\"margin-left: 2px\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"Enter name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Category: \" style=\"margin-left: 2px\">\r\n          <el-cascader\r\n              :props=\"{value: 'name', label: 'name'}\"\r\n              v-model=\"form.categories\"\r\n              :options=\"categories\"></el-cascader>\r\n        </el-form-item>\r\n        <el-form-item label=\"Author: \" style=\"margin-left: 2px\" prop=\"author\">\r\n          <el-input v-model=\"form.author\" placeholder=\"Enter last name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Publisher: \" style=\"margin-left: 2px\" prop=\"publisher\">\r\n          <el-input v-model=\"form.publisher\" placeholder=\"Enter publisher name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Publish Date: \" style=\"margin-left: 2px\" prop=\"publish_date\">\r\n          <el-date-picker\r\n              v-model=\"form.publish_date\"\r\n              type=\"date\"\r\n              value-format=\"yyyy-MM-dd\"\r\n              placeholder=\"Select a date\">\r\n          </el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item id=\"credit\" label=\"Score: \" style=\"margin-left: 2px;\" prop=\"credit\">\r\n          <el-input v-model=\"form.credit\" placeholder=\"Enter score value\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item id=\"cover\" label=\"Cover url: \" style=\"margin-left: 2px;\" prop=\"cover\">\r\n          <el-input v-model=\"form.cover\" placeholder=\"Enter cover url\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item id=\"number\" label=\"Number: \" style=\"margin-left: 2px;\" prop=\"number\">\r\n          <el-input v-model=\"form.number\" placeholder=\"Enter number\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- button area -->\r\n      <div style=\"text-align: center\">\r\n        <el-button type=\"primary\" style=\"margin-left: 2px; height: 40px; min-width: 100px\" @click=\"save\">Submit</el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"Edit\",\r\n\r\n  data() {\r\n    const checkNumeric = (rule, value, callback) => {\r\n      if(!value) {\r\n        callback(new Error('This blank cannot be empty'));\r\n      }\r\n      if(!/^[0-9]*$/.test(value)) {\r\n        callback(new Error('Please enter a numerical value'))\r\n      }\r\n      if(parseInt(value) < 0) {\r\n        callback(new Error('Please enter a number larger than 0'))\r\n      }\r\n      callback()\r\n    };\r\n\r\n    const checkISBN = (rule, value, callback) => {\r\n      if(!value) {\r\n        callback(new Error('Please enter the book\\'s ISBN'))\r\n      }\r\n      if (!/^[0-9]{10}$/.test(value)) {\r\n        callback(new Error('Illegal ISBN'));\r\n      }\r\n      callback()\r\n    }\r\n\r\n    return {\r\n      form: {},\r\n      categories: [],\r\n      rules: {\r\n        // cannot be empty\r\n        name: [{ required: true, message: \"Please enter the book's name\", trigger: 'blur' }],\r\n        category: [{ required: true, message: \"Please enter the book's category\", trigger: 'blur' }],\r\n        author: [{ required: true, message: \"Please enter the book's author\", trigger: 'blur' }],\r\n        publisher: [{ required: true, message: \"Please enter the book's publisher\", trigger: 'blur' }],\r\n        publish_date: [{ required: true, message: \"Please select a date\", trigger: 'blur' }],\r\n        // more restrictions\r\n        isbn: [{ required: true,  validator: checkISBN, trigger: 'blur' }],\r\n        number: [{ required: true,  validator: checkNumeric, trigger: 'blur' }],\r\n        credit: [{ required: true,  validator: checkNumeric, trigger: 'blur' }],\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    const isbn = this.$route.query.isbn\r\n    request.get(\"/book/\" + isbn).then(res => {\r\n      this.form = res.data\r\n      if(this.form.category) {\r\n        this.form.categories = this.form.category.split(' > ')\r\n      }\r\n    })\r\n\r\n    request.get('category/tree').then(res => {\r\n      this.categories = res.data\r\n    })\r\n  },\r\n\r\n  methods: {\r\n    save() {\r\n      this.$refs['ruleForm'].validate((valid) => {\r\n        if(valid) {\r\n          request.put('book/update', this.form).then(res => {\r\n            if(res.code === '200') {\r\n              this.$notify.success('Updated')\r\n              this.$router.push(\"/BookList\")\r\n            } else {\r\n              this.$notify.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";AAsDA,OAAAA,OAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA,MAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACA,gBAAAC,IAAA,CAAAH,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACA,IAAAE,QAAA,CAAAJ,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACAD,QAAA;IACA;IAEA,MAAAI,SAAA,GAAAA,CAAAN,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACA,mBAAAC,IAAA,CAAAH,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;MACAD,QAAA;IACA;IAEA;MACAK,IAAA;MACAC,UAAA;MACAC,KAAA;QACA;QACAZ,IAAA;UAAAa,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,QAAA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAE,MAAA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAG,SAAA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAI,YAAA;UAAAN,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACA;QACAK,IAAA;UAAAP,QAAA;UAAAQ,SAAA,EAAAZ,SAAA;UAAAM,OAAA;QAAA;QACAO,MAAA;UAAAT,QAAA;UAAAQ,SAAA,EAAAnB,YAAA;UAAAa,OAAA;QAAA;QACAQ,MAAA;UAAAV,QAAA;UAAAQ,SAAA,EAAAnB,YAAA;UAAAa,OAAA;QAAA;MACA;IACA;EACA;EAEAS,QAAA;IACA,MAAAJ,IAAA,QAAAK,MAAA,CAAAC,KAAA,CAAAN,IAAA;IACArB,OAAA,CAAA4B,GAAA,YAAAP,IAAA,EAAAQ,IAAA,CAAAC,GAAA;MACA,KAAAnB,IAAA,GAAAmB,GAAA,CAAA5B,IAAA;MACA,SAAAS,IAAA,CAAAM,QAAA;QACA,KAAAN,IAAA,CAAAC,UAAA,QAAAD,IAAA,CAAAM,QAAA,CAAAc,KAAA;MACA;IACA;IAEA/B,OAAA,CAAA4B,GAAA,kBAAAC,IAAA,CAAAC,GAAA;MACA,KAAAlB,UAAA,GAAAkB,GAAA,CAAA5B,IAAA;IACA;EACA;EAEA8B,OAAA;IACAC,KAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACApC,OAAA,CAAAqC,GAAA,qBAAA1B,IAAA,EAAAkB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAQ,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;cACA,KAAAH,OAAA,CAAAI,KAAA,CAAAb,GAAA,CAAAc,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}